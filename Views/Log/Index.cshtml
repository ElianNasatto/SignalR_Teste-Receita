@using AplicationSignalR.Views.Components
@{
    ViewData["Title"] = "Monitor de logs";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Últimos logs</h2>

<br />

<component type="typeof(ProgressBarIntegrada)" render-mode="ServerPrerendered" />

<div class="table-responsive">
    <table class="table">
        <thead>
            <tr>
                <td>cnpj_basico</td>
                <td>razao_social</td>
                <td>natureza_juridica</td>
                <td>qualificacao_responsavel</td>
                <td>capital_social</td>
                <td>porte_empresa</td>
                <td>ente_federativo_responsavel</td>
            </tr>
        </thead>
        <tbody id="bodyTable">
        </tbody>
    </table>
</div>

<script>
    var logs = new Array();

    var connectionLog = new signalR.HubConnectionBuilder().withUrl("/loghub", { transport: signalR.HttpTransportType.LongPolling }).withAutomaticReconnect().build();

    function adicionarLogNaLista(log) {

        logs.push(log);
        while (logs.length > 8)
            logs.shift();

        var lista = document.getElementById("bodyTable");
        lista.innerHTML = '';


        logs.map(l => {
            var linha = document.createElement("tr");

            var dados = l.split(";");

            // Criar uma linha (tr) para cada item no array
            for (var i = 0; i < dados.length; i++) {

                // Criar uma célula (td) para cada item no array
                var cellString = document.createElement("td");
                cellString.textContent = dados[i];

                // Adicionar a célula à linha
                linha.appendChild(cellString);


            }

            lista.appendChild(linha);
        });

    }


    connectionLog.on("EnviarLog", function (lista) {
        if (Array.isArray(lista)) {
            lista.map(log => adicionarLogNaLista(log));
        } else {
            adicionarLogNaLista(lista);
        }
    });

    connectionLog.start().then(function () {
        connectionLog.invoke("CarregarLogs")
            .then(function (lista) {
                if (lista)
                    lista.map(log => adicionarLogNaLista(log));
            });
    });

    connectionLog.onreconnected(function () {
        connectionLog.invoke("CarregarLogs")
            .then(function (lista) {
                lista.map(log => adicionarLogNaLista(log));
            });
    });



</script>