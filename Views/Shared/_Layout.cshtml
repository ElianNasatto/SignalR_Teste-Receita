@using AplicationSignalR.Views.Components
<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Aplication SignalR</title>

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/AplicationSignalR.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/AplicationSignalR.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/lib/bootstrap-icons/font/bootstrap-icons.css" />
    <link rel="stylesheet" href="~/lib/bootstrap-icons/font/bootstrap-icons.min.css" />

    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js" asp-append-version="true"></script>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.js" asp-append-version="true"></script>
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js" asp-append-version="true"></script>

    <script>

        if (Notification.permission == 'denied')
        {
            Notification.requestPermission();
        }

        var notificacoesLog = new Array();

        function motrarNotificacoes(mensage) {

            if ((Notification.permission == 'granted') && (document.visibilityState == 'hidden')) 
            {
                new Notification('Aviso', { body: mensage });
            }
            var notificationContainer = document.getElementById('notification-container');

            // Cria uma nova notificação
            var notification = document.createElement('div');
            notification.className = 'toast custom-toast mb-1 border border-warning';
            notification.setAttribute("role", "alert");
            notification.setAttribute("aria-live", "assertive");
            notification.innerHTML = `
                                                            <div class="toast-header">
                                                                <i class="bi bi-bell-fill"></i>
                                                                <strong class=""> Aviso </strong>
                                                            </div>
                                                            <div class="toast-body">` + mensage + `</div>`;

            // Adiciona a notificação ao contêiner
            notificationContainer.appendChild(notification);

            // Mostra a notificação usando o componente de Toast do Bootstrap
            var toast = new bootstrap.Toast(notification);
            toast.show();

        }


        var connectionNotificacoes = new signalR.HubConnectionBuilder().withUrl("/loghub", { transport: signalR.HttpTransportType.LongPolling }).withAutomaticReconnect().build();

        var connectionNotificacoes = new signalR.HubConnectionBuilder().withUrl("/loghub", { transport: signalR.HttpTransportType.LongPolling }).withAutomaticReconnect().build();
        connectionNotificacoes.on("EnviarLog", function (lista) {
            if (Array.isArray(lista)) {
                lista.map(notifi => motrarNotificacoes(notifi));
            } else {
                motrarNotificacoes(lista);
            }
        });

        connectionNotificacoes.start().catch(function (err) {
            return console.error(err.toString());
        });

    </script>

    <style>
        body {
            font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
            font-size: 14px;
            line-height: 1.5;
        }

        .notification {
            background-color: #4CAF50;
            color: #fff;
            padding: 15px;
            border-radius: 5px;
            display: none;
            transition: opacity 0.5s ease-in-out;
        }

        .notification {
            background-color: #4CAF50;
            color: #fff;
            padding: 15px;
            margin-top: 10px;
            border-radius: 5px;
            opacity: 0;
            transform: translateY(100%);
            transition: opacity 0.5s ease-in-out, transform 0.5s ease-in-out;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        }

        .notification-container {
            position: fixed;
            top: 20px;
            right: 20px;
            display: flex;
            flex-direction: column-reverse;
            align-items: flex-end;
        }

        .show {
            opacity: 1;
            transform: translateY(0);
        }
    </style>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">Aplication SignalR</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Log" asp-action="Index">Monitor de Logs</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Download" asp-action="Index">Download arquivos</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="PaillaveDotNetEtl" asp-action="Index">Paillevel ETL</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        <component type="typeof(AvisoPanel)" render-mode="ServerPrerendered" />
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <div class="notification-container" id="notification-container">
    </div>


    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2023 - ELIAN - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
